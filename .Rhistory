getwd()
setwd("C:/Users/moi/OneDrive/Documents")
update.packages()
x <- 2
X = 4
b = x
3 -> y
data(iris)
force(iris)
View(iris)
print(x)
print(b)
print(X)
x
ls
obejcts
objects
rm(X)
mode(x)
mode(iris)
is.null(x)
is.na(x)
1:10
a <- c("bonjour", "hello","hi")
a
b <- rep(a, times=2)
b
c <- rep(a, each=2)
c
install.packages('repec')
install.packages('devtools')
rm(list=ls())
library(igraph)
library(tidyverse)
library(visNetwork)
library(dplyr)
rm(list=ls())
setwd("../")
setwd("~/github stage/social norms authors/social-norms-network-authors")
authors_net <- readxl::read_excel("Social Norms meta.xlsx", sheet = "ALL") %>%
#subset.data.frame(subset = Method_elicitation =="KW" |
#                   Method_elicitation =="Bicchieri" |
#                  Method_elicitation =="Both") %>%
distinct(PaperID, .keep_all = T) %>% subset.data.frame(select = c("PaperID", "Authors", "Year", "Outlet", "Published", "Game_type", "Method_elicitation")) %>%
mutate(New_authors = str_replace_all(Authors, ";", "--"))
authors_n <- authors_net[grep("--", authors_net$New_authors), ] # take only co-authored papers
authors_n$numberoauthors <- (1+str_count(authors_n$New_authors, "--")) # compute number of coauthors
SplitAuthors <- sapply(authors_n$New_authors, strsplit, split = "--", fixed = TRUE) # list of characters, each list is a paper
AuthorCombinations <- sapply(SplitAuthors,function(x){combn(unlist(x),m = 2)}) # compute all poss. combinats. among co-authors
AuthorEdges <- rapply(AuthorCombinations,unlist) # transform matrix into list
names(AuthorEdges) <- NULL
AuthorEdges <- trimws(AuthorEdges)
AuthorGraph <- graph(AuthorEdges, directed = FALSE) # igraph - we input the edge list (taken two by two)
nodes <- read.csv("nodes.csv") %>% merge.data.frame(suca)
edges <- read.csv("edges.csv")
AuthorGraph = graph_from_data_frame(edges, vertices = nodes, directed = F)
plot_net <- visNetwork(nodes, edges) %>%
#visIgraphLayout(layout = "layout_with_fr") %>%
visOptions(highlightNearest = list(enabled = T, hover = T),
nodesIdSelection = T)
l_method <- list()
for(i in 1:length(authors_n$Method_elicitation)){
l_method[[i]] <- data.frame(id=SplitAuthors[[i]], method=rep(authors_n$Method_elicitation[i],authors_n$numberoauthors[i]))
}
l_method_sum <- do.call(rbind, l_method) %>% group_by(id) %>% summarise(n_KW=sum(method=="KW")+sum(method=="Both"),n_BX=sum(method=="Bicchieri")+sum(method=="Both")) %>% mutate(d=(n_KW-n_BX)/(n_KW+n_BX))
Nodes <- data.frame(id=as_ids(V(AuthorGraph)), label=as_ids(V(AuthorGraph))) %>%
merge.data.frame(l_method_sum) %>%
mutate(color = ifelse(d < -.5, "blue",ifelse(d < -.01, "grey", ifelse(d < .5, "green", "red")))) %>%
mutate(title = paste0("<p><b>", id,"</b><br>","Bicchieri = ", n_BX, "<br> Krupka = ", n_KW, "</p>"))
Edges <- data.frame(matrix(AuthorEdges, ncol=2, byrow = T))
colnames(Edges) <- c("from", "to")
plot_net <- visNetwork(nodes, edges) %>%
#visIgraphLayout(layout = "layout_with_fr") %>%
visOptions(highlightNearest = list(enabled = T, hover = T),
nodesIdSelection = T)
rm(list=ls())
library(igraph)
library(tidyverse)
library(visNetwork)
authors_net <- readxl::read_excel("Social Norms meta.xlsx", sheet = "ALL") %>%
#subset.data.frame(subset = Method_elicitation =="KW" |
#                   Method_elicitation =="Bicchieri" |
#                  Method_elicitation =="Both") %>%
distinct(PaperID, .keep_all = T) %>% subset.data.frame(select = c("PaperID", "Authors", "Year", "Outlet", "Published", "Game_type", "Method_elicitation")) %>%
mutate(New_authors = str_replace_all(Authors, ";", "--"))
authors_n <- authors_net[grep("--", authors_net$New_authors), ] # take only co-authored papers
authors_n$numberoauthors <- (1+str_count(authors_n$New_authors, "--")) # compute number of coauthors
SplitAuthors <- sapply(authors_n$New_authors, strsplit, split = "--", fixed = TRUE) # list of characters, each list is a paper
AuthorCombinations <- sapply(SplitAuthors,function(x){combn(unlist(x),m = 2)}) # compute all poss. combinats. among co-authors
AuthorEdges <- rapply(AuthorCombinations,unlist) # transform matrix into list
names(AuthorEdges) <- NULL
Edges <- data.frame(matrix(trimws(AuthorEdges), ncol=2, byrow=T)); colnames(Edges)=c("from","to")
colnames(Edges) <- c("from", "to")
Nodes <- data.frame(id=unique(c(unique(Edges$from),(unique(Edges$to)), unique(authors_solo$Authors))))
AuthorGraph <- graph(AuthorEdges, directed = FALSE) # igraph - we input the edge list (taken two by two)
l_method <- list()
for(i in 1:length(authors_n$Method_elicitation)){
l_method[[i]] <- data.frame(id=SplitAuthors[[i]], method=rep(authors_n$Method_elicitation[i],authors_n$numberoauthors[i]))
}
l_method_sum <- do.call(rbind, l_method) %>% group_by(id) %>% summarise(n_KW=sum(method=="KW")+sum(method=="Both"),n_BX=sum(method=="Bicchieri")+sum(method=="Both")) %>% mutate(d=(n_KW-n_BX)/(n_KW+n_BX))
Nodes <- data.frame(id=as_ids(V(AuthorGraph)), label=as_ids(V(AuthorGraph))) %>%
merge.data.frame(l_method_sum) %>%
mutate(color = ifelse(d < -.5, "blue",ifelse(d < -.01, "grey", ifelse(d < .5, "green", "red")))) %>%
mutate(title = paste0("<p><b>", id,"</b><br>","Bicchieri = ", n_BX, "<br> Krupka = ", n_KW, "</p>"))
Edges <- data.frame(matrix(AuthorEdges, ncol=2, byrow = T))
colnames(Edges) <- c("from", "to")
plot_net <- visNetwork(Nodes, Edges) %>%
#visIgraphLayout(layout = "layout_with_fr") %>%
visOptions(highlightNearest = list(enabled = T, hover = T),
nodesIdSelection = T)
plot_net <- visNetwork(Nodes, Edges) %>%
#visIgraphLayout(layout = "layout_with_fr") %>%
visOptions(highlightNearest = list(enabled = T, hover = T),
nodesIdSelection = T)
View(Nodes)
rm(list=ls())
nodes <- read.csv("nodes.csv") %>% merge.data.frame(suca)
edges <- read.csv("edges.csv")
AuthorGraph = graph_from_data_frame(edges, vertices = nodes, directed = F)
nodes <- read.csv("nodes.csv") %>% merge.data.frame(suca)
rm(list=ls())
setwd("../")
setwd("~/github stage/social norms authors/social-norms-network-authors")
authors_net <- readxl::read_excel("Social Norms meta.xlsx", sheet = "ALL") %>%
#subset.data.frame(subset = Method_elicitation =="KW" |
#                   Method_elicitation =="Bicchieri" |
#                  Method_elicitation =="Both") %>%
distinct(PaperID, .keep_all = T) %>% subset.data.frame(select = c("PaperID", "Authors", "Year", "Outlet", "Published", "Game_type", "Method_elicitation")) %>%
mutate(New_authors = str_replace_all(Authors, ";", "--"))
authors_n <- authors_net[grep("--", authors_net$New_authors), ] # take only co-authored papers
authors_n$numberoauthors <- (1+str_count(authors_n$New_authors, "--")) # compute number of coauthors
SplitAuthors <- sapply(authors_n$New_authors, strsplit, split = "--", fixed = TRUE) # list of characters, each list is a paper
AuthorCombinations <- sapply(SplitAuthors,function(x){combn(unlist(x),m = 2)}) # compute all poss. combinats. among co-authors
AuthorEdges <- rapply(AuthorCombinations,unlist) # transform matrix into list
names(AuthorEdges) <- NULL
AuthorEdges <- trimws(AuthorEdges)
AuthorGraph <- graph(AuthorEdges, directed = FALSE) # igraph - we input the edge list (taken two by two)
l_method <- list()
for(i in 1:length(authors_n$Method_elicitation)){
l_method[[i]] <- data.frame(id=SplitAuthors[[i]], method=rep(authors_n$Method_elicitation[i],authors_n$numberoauthors[i]))
}
l_method_sum <- do.call(rbind, l_method) %>% group_by(id) %>% summarise(n_KW=sum(method=="KW")+sum(method=="Both"),n_BX=sum(method=="Bicchieri")+sum(method=="Both")) %>% mutate(d=(n_KW-n_BX)/(n_KW+n_BX))
Nodes <- data.frame(id=as_ids(V(AuthorGraph)), label=as_ids(V(AuthorGraph))) %>%
merge.data.frame(l_method_sum) %>%
mutate(color = ifelse(d < -.5, "blue",ifelse(d < -.01, "grey", ifelse(d < .5, "green", "red")))) %>%
mutate(title = paste0("<p><b>", id,"</b><br>","Bicchieri = ", n_BX, "<br> Krupka = ", n_KW, "</p>"))
Edges <- data.frame(matrix(AuthorEdges, ncol=2, byrow = T))
colnames(Edges) <- c("from", "to")
plot_net <- visNetwork(Nodes, Edges) %>%
#visIgraphLayout(layout = "layout_with_fr") %>%
visOptions(highlightNearest = list(enabled = T, hover = T),
nodesIdSelection = T)
plot(AuthorGraph, vertex.label.color="black", vertex.size=2.5,
vertex.label.cex=0.5, vertex.label.dist=2, vertex.color="blue" )
visNetwork(nodes, edges) %>% visIgraphLayout() %>% visNodes(size= 10)
visNetwork(Nodes, Edges) %>% visIgraphLayout() %>% visNodes(size= 10)
visIgraph(AuthorGraph, physics = FALSE, smooth = TRUE)
authors_data <- readxl::read_excel("authors.xlsx", sheet = "Sheet1") %>%
distinct(ID, .keep_all = T) %>% subset.data.frame(select = c("ID", "last_name", "first_name", "affil_now", "loc_now", "citation_nbr", "h_index", "research_interests", "gender", "eco_psycho" ))
View(Nodes)
